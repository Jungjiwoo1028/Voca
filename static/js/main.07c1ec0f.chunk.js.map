{"version":3,"sources":["components/Navbar/Navbar.js","actions/vocaAction.js","components/Add/Add.js","actions/deleteAction.js","components/Detail/Detail.js","components/Voca/Voca.js","components/Voca/Vocas.js","components/Home/Home.js","App.js","reducers/vocaReducer.js","reducers/rootReducer.js","index.js"],"names":["Navbar","className","Link","to","vocaAction","title","type","example","payload","connect","state","vocaData","voca","dispatch","bindActionCreators","updateVoca","props","typeData","map","item","i","useState","formIsValid","setFormIsValid","useReducer","action","value","val","isValid","valid","titleState","dispatchTitle","typeState","dispatchType","exampleState","dispatchExample","placeholder","onChange","e","target","disabled","onClick","deleteAction","deleteVoca","location","pathname","Home","App","Switch","Route","exact","path","component","Add","Detail","vocaReducer","newState","length","splice","rootreducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","theStore","createStore","persistor","persistStore","ReactDOM","render","store","document","getElementById"],"mappings":"4WAmBeA,MAff,WACE,OACE,yBAASC,UAAU,kBAAnB,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,cAACC,EAAA,EAAD,CAAMC,GAAG,QAAT,uBAEF,qBAAKF,UAAU,WAAf,SACE,cAACC,EAAA,EAAD,CAAMC,GAAG,YAAT,yB,cCDKC,EAXI,SAACC,EAAOC,EAAMC,GAC/B,MAAO,CACLD,KAAM,UACNE,QAAS,CACPH,QACAC,OACAC,a,MCyJSE,mBAhBf,SAAyBC,GACvB,MAAO,CACLC,SAAUD,EAAME,SAKpB,SAA4BC,GAC1B,OAAOC,YACL,CACEC,WAAYA,GAEdF,KAIWJ,EAvJf,SAAaO,GAEX,IAEMC,EAFY,CAAC,eAAM,eAAM,qBAAO,eAAM,sBAEjBC,KAAI,SAACC,EAAMC,GACpC,OAAO,iCAAiBD,GAAJC,MAStB,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAoCA,EAAoCC,sBAjCf,SAACd,EAAOe,GAC3B,MAAoB,eAAhBA,EAAOnB,KACF,CACLoB,MAAOD,EAAOE,IACdC,QAASH,EAAOI,OAGbnB,IA0BoD,CAC3DgB,MAAO,GACPE,SAAS,IAFX,mBAAOE,EAAP,KAAmBC,EAAnB,KAKA,EAAkCP,sBA3Bd,SAACd,EAAOe,GAC1B,MAAoB,cAAhBA,EAAOnB,KACF,CACLoB,MAAOD,EAAOE,IACdC,QAASH,EAAOI,OAGbnB,IAoBiD,CACxDgB,MAAO,eACPE,SAAS,IAFX,mBAAOI,EAAP,KAAkBC,EAAlB,KAKA,EAAwCT,sBArBjB,SAACd,EAAOe,GAC7B,MAAoB,iBAAhBA,EAAOnB,KACF,CACLoB,MAAOD,EAAOE,IACdC,QAASH,EAAOI,OAGbnB,IAc0D,CACjEgB,MAAO,GACPE,SAAS,IAFX,mBAAOM,EAAP,KAAqBC,EAArB,KAgCA,OACE,0BAASlC,UAAU,eAAnB,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,iBAAf,SACE,uBAAMA,UAAU,YAAhB,UACE,2CACA,uBACEA,UAAU,eACVmC,YAAY,2DACZC,SAnCW,SAACC,GACpBP,EAAc,CACZJ,IAAKW,EAAEC,OAAOb,MACdpB,KAAM,aACNuB,MAA0B,KAAnBS,EAAEC,OAAOb,QAElBH,EAAkC,KAAnBe,EAAEC,OAAOb,OAAgBQ,EAAaN,UA8B7CF,MAAOI,EAAWJ,QAEpB,wBACEzB,UAAU,eACVoC,SA/BU,SAACC,GACnBL,EAAa,CACXN,IAAKW,EAAEC,OAAOb,MACdpB,KAAM,YACNuB,MAA0B,KAAnBS,EAAEC,OAAOb,SA4BVA,MAAOM,EAAUN,MAHnB,SAKGT,IAEH,uBACEhB,UAAU,iBACVmC,YAAY,UACZC,SA/Ba,SAACC,GACtBH,EAAgB,CACdR,IAAKW,EAAEC,OAAOb,MACdpB,KAAM,eACNuB,MAA0B,KAAnBS,EAAEC,OAAOb,QAElBH,EAAkC,KAAnBe,EAAEC,OAAOb,OAAgBI,EAAWF,UA0B3CF,MAAOQ,EAAaR,QAEtB,cAACxB,EAAA,EAAD,CAAMC,GAAG,QAAT,SACE,wBACEF,UAAU,YACVuC,UAAWlB,EACXmB,QAAS,kBAhHJpC,EAiHKyB,EAAWJ,MAjHTpB,EAiHgB0B,EAAUN,MAjHpBnB,EAiH2B2B,EAAaR,WAhHpEV,EAAMD,WAAWV,EAAOC,EAAMC,GADhC,IAAiBF,EAAOC,EAAMC,GA6GpB,+BCnHGmC,G,MAXM,SAACrC,EAAOC,EAAMC,GACjC,MAAO,CACLD,KAAM,aACNE,QAAS,CACPH,QACAC,OACAC,cCgDSE,mBAhBf,SAAyBC,GACvB,MAAO,CACLC,SAAUD,EAAME,SAKpB,SAA4BC,GAC1B,OAAOC,YACL,CACE6B,WAAYA,GAEd9B,KAIWJ,EA9Cf,SAAgBO,GAEd,MAAiCA,EAAM4B,SAASlC,MAAxCL,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,QAKrB,OACE,0BAASN,UAAU,kBAAnB,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BI,IAC7B,qBAAKJ,UAAU,YAAf,SAA4BK,IAC5B,qBAAKL,UAAU,eAAf,SAA+BM,IAC/B,cAACL,EAAA,EAAD,CAAMC,GAAG,QAAT,SACE,wBACEF,UAAU,cACVwC,QAAS,kBAdrB,SAAoBpC,EAAOC,EAAMC,GAC/BS,EAAM2B,WAAWtC,EAAOC,EAAMC,GAaLoC,CAAWtC,EAAOC,EAAMC,IAFzC,iC,MCwBGE,mBAhBf,SAAyBC,GACvB,MAAO,CACLC,SAAUD,EAAME,SAKpB,SAA4BC,GAC1B,OAAOC,YACL,CACE6B,WAAYA,GAEd9B,KAIWJ,EAzCf,SAAcO,GACZ,OACE,yBAASf,UAAU,gBAAnB,SACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACF0C,SAAS,gBAAD,OAAkB7B,EAAMX,OAChCK,MAAO,CACLL,MAAOW,EAAMX,MACbC,KAAMU,EAAMV,KACZC,QAASS,EAAMT,UANrB,SAUE,sBAAKN,UAAU,kBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBe,EAAMX,QAC9B,qBAAKJ,UAAU,iBAAf,SACE,qBAAKA,UAAU,OAAf,SAAuBe,EAAMV,KAAK,iB,MCW/BG,mBAhBf,SAAyBC,GACvB,MAAO,CACLC,SAAUD,EAAME,SAKpB,SAA4BC,GAC1B,OAAOC,YACL,CACEC,WAAYA,GAEdF,KAIWJ,EA3Bf,SAAeO,GACb,OAAOA,EAAML,SAASO,KAAI,SAACC,EAAMC,GAC/B,OACE,yBAASnB,UAAU,iBAAnB,SACE,cAAC,EAAD,CAAMI,MAAOc,EAAKd,MAAOC,KAAMa,EAAKb,KAAMC,QAASY,EAAKZ,WADjBa,S,MCIhC0B,MATf,WACE,OACE,0BAAS7C,UAAU,gBAAnB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCQS8C,MAZf,WACE,OACE,cAAC,IAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWN,IACrC,cAACG,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWC,IACnC,cAACJ,EAAA,EAAD,CAAOE,KAAK,sBAAsBC,UAAWE,U,QCX/C3C,EAAW,CACf,CACEN,MAAO,MACPC,KAAM,eACNC,QAAS,gCAEX,CACEF,MAAO,QACPC,KAAM,eACNC,QAAS,iCAEX,CACEF,MAAO,SACPC,KAAM,eACNC,QAAS,2BAkBEgD,EAdK,WAA+B,IAA9B7C,EAA6B,uDAArBC,EAAUc,EAAW,uCAChD,GAAoB,YAAhBA,EAAOnB,KAAoB,CAC7B,IAAMkD,EAAQ,sBAAO9C,GAAP,CAAce,EAAOjB,UACnC,OAAOgD,EACF,GAAoB,eAAhB/B,EAAOnB,KAChB,IAAK,IAAIc,EAAI,EAAGA,EAAIV,EAAM+C,OAAQrC,IAC5BV,EAAMU,GAAGf,QAAUoB,EAAOjB,QAAQH,OACpCK,EAAMgD,OAAOtC,EAAG,GAItB,OAAOV,GCtBMiD,EAJKC,YAAgB,CAClChD,KAAM2C,I,iCCSFM,EAAgB,CACpBC,IAAK,OACLC,aAGIC,EAAmBC,YAAeJ,EAAeF,GACjDO,EAAWC,YAAYH,GACvBI,EAAYC,YAAaH,GAE/BI,IAASC,OACP,cAAC,IAAD,CAAUC,MAAON,EAAjB,SACE,cAAC,IAAD,CAAaE,UAAWA,EAAxB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.07c1ec0f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  return (\n    <section className=\"section__navbar\">\n      <div className=\"container__navbar\">\n        <div className=\"box__logo\">\n          <Link to=\"/Voca\">My voca</Link>\n        </div>\n        <div className=\"box__add\">\n          <Link to=\"/Voca/add\">Add</Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Navbar;\n","const vocaAction = (title, type, example) => {\n  return {\n    type: \"addVoca\",\n    payload: {\n      title,\n      type,\n      example,\n    },\n  };\n};\n\nexport default vocaAction;\n","import React, { useState, useReducer } from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport updateVoca from \"../../actions/vocaAction\";\nimport { Link } from \"react-router-dom\";\nimport \"./Add.css\";\n\nfunction Add(props) {\n  // type data\n  const typeDatas = [\"동사\", \"명사\", \"형용사\", \"부사\", \"감탄사\"];\n\n  const typeData = typeDatas.map((item, i) => {\n    return <option key={i}>{item}</option>;\n  });\n\n  // function for add new voca\n  function addVoca(title, type, example) {\n    props.updateVoca(title, type, example);\n  }\n\n  // form state\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // Title reducer\n  const titleReducer = (state, action) => {\n    if (action.type === \"TitleValue\") {\n      return {\n        value: action.val,\n        isValid: action.valid,\n      };\n    }\n    return state;\n  };\n\n  // Type reducer\n  const typeReducer = (state, action) => {\n    if (action.type === \"TypeValue\") {\n      return {\n        value: action.val,\n        isValid: action.valid,\n      };\n    }\n    return state;\n  };\n\n  // Example reducer\n  const exampleReducer = (state, action) => {\n    if (action.type === \"ExampleValue\") {\n      return {\n        value: action.val,\n        isValid: action.valid,\n      };\n    }\n    return state;\n  };\n\n  // useReducers\n  const [titleState, dispatchTitle] = useReducer(titleReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const [typeState, dispatchType] = useReducer(typeReducer, {\n    value: \"동사\",\n    isValid: false,\n  });\n\n  const [exampleState, dispatchExample] = useReducer(exampleReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  // Handler\n  const titleHandler = (e) => {\n    dispatchTitle({\n      val: e.target.value,\n      type: \"TitleValue\",\n      valid: e.target.value !== \"\",\n    });\n    setFormIsValid(e.target.value !== \"\" && exampleState.isValid);\n  };\n\n  const typeHandler = (e) => {\n    dispatchType({\n      val: e.target.value,\n      type: \"TypeValue\",\n      valid: e.target.value !== \"\",\n    });\n  };\n\n  const exampleHandler = (e) => {\n    dispatchExample({\n      val: e.target.value,\n      type: \"ExampleValue\",\n      valid: e.target.value !== \"\",\n    });\n    setFormIsValid(e.target.value !== \"\" && titleState.isValid);\n  };\n\n  return (\n    <section className=\"section__add\">\n      <Navbar />\n      <div className=\"container__add\">\n        <form className=\"form__add\">\n          <h3>New Voca!</h3>\n          <input\n            className=\"input__title\"\n            placeholder=\"단어를 입력해주세요.\"\n            onChange={titleHandler}\n            value={titleState.value}\n          />\n          <select\n            className=\"select__type\"\n            onChange={typeHandler}\n            value={typeState.value}\n          >\n            {typeData}\n          </select>\n          <input\n            className=\"input__example\"\n            placeholder=\"example\"\n            onChange={exampleHandler}\n            value={exampleState.value}\n          />\n          <Link to=\"/Voca\">\n            <button\n              className=\"btn__save\"\n              disabled={!formIsValid}\n              onClick={() =>\n                addVoca(titleState.value, typeState.value, exampleState.value)\n              }\n            >\n              Save\n            </button>\n          </Link>\n        </form>\n      </div>\n    </section>\n  );\n}\n\n// 1. 스토어의 state와 props를 엮는다.\nfunction mapStateToProps(state) {\n  return {\n    vocaData: state.voca,\n  };\n}\n\n// 2. action을 dispatch함수로 전달한다.\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      updateVoca: updateVoca,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Add);\n","const deleteAction = (title, type, example) => {\n  return {\n    type: \"deleteVoca\",\n    payload: {\n      title,\n      type,\n      example,\n    },\n  };\n};\n\nexport default deleteAction;\n","import React from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport \"./Detail.css\";\nimport deleteVoca from \"../../actions/deleteAction\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction Detail(props) {\n  // 객체 통해서 변수 만들기\n  const { title, type, example } = props.location.state;\n  // function for delete voca\n  function deleteVoca(title, type, example) {\n    props.deleteVoca(title, type, example);\n  }\n  return (\n    <section className=\"section__detail\">\n      <Navbar />\n      <div className=\"container__detail\">\n        <div className=\"inner__detail\">\n          <div className=\"box__title\">{title}</div>\n          <div className=\"box__type\">{type}</div>\n          <div className=\"box__example\">{example}</div>\n          <Link to=\"/Voca\">\n            <button\n              className=\"btn__delete\"\n              onClick={() => deleteVoca(title, type, example)}\n            >\n              Delete\n            </button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n\n// 1. 스토어의 state와 props를 엮는다.\nfunction mapStateToProps(state) {\n  return {\n    vocaData: state.voca,\n  };\n}\n\n// 2. action을 dispatch함수로 전달한다.\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      deleteVoca: deleteVoca,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Voca.css\";\nimport deleteVoca from \"../../actions/deleteAction\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nfunction Voca(props) {\n  return (\n    <section className=\"section__voca\">\n      <Link\n        to={{\n          pathname: `/Voca/detail/${props.title}`,\n          state: {\n            title: props.title,\n            type: props.type,\n            example: props.example,\n          },\n        }}\n      >\n        <div className=\"container__voca\">\n          <div className=\"title\">{props.title}</div>\n          <div className=\"innerbox__type\">\n            <div className=\"type\">{props.type[0]}</div>\n          </div>\n        </div>\n      </Link>\n    </section>\n  );\n}\n\n// 1. 스토어의 state와 props를 엮는다.\nfunction mapStateToProps(state) {\n  return {\n    vocaData: state.voca,\n  };\n}\n\n// 2. action을 dispatch함수로 전달한다.\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      deleteVoca: deleteVoca,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Voca);\n","import React from \"react\";\nimport Voca from \"./Voca\";\nimport \"./Vocas.css\";\nimport updateVoca from \"../../actions/vocaAction\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nfunction Vocas(props) {\n  return props.vocaData.map((item, i) => {\n    return (\n      <section className=\"section__vocas\" key={i}>\n        <Voca title={item.title} type={item.type} example={item.example} />\n      </section>\n    );\n  });\n}\n\n// 1. 스토어의 state와 props를 엮는다.\nfunction mapStateToProps(state) {\n  return {\n    vocaData: state.voca,\n  };\n}\n\n// 2. action을 dispatch함수로 전달한다.\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      updateVoca: updateVoca,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vocas);\n","import React from \"react\";\nimport Vocas from \"../Voca/Vocas\";\nimport Navbar from \"../Navbar/Navbar\";\nimport \"./Home.css\";\n\nfunction Home() {\n  return (\n    <section className=\"section__home\">\n      <Navbar />\n      <Vocas />\n    </section>\n  );\n}\n\nexport default Home;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Add from \"./components/Add/Add\";\nimport Detail from \"./components/Detail/Detail\";\nimport Home from \"./components/Home/Home\";\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/Voca\" component={Home} />\n        <Route path=\"/Voca/add\" component={Add} />\n        <Route path=\"/Voca/detail/:title\" component={Detail} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const vocaData = [\n  {\n    title: \"run\",\n    type: \"동사\",\n    example: \"Can you run as fast as Mike?\",\n  },\n  {\n    title: \"water\",\n    type: \"명사\",\n    example: \"The smoke made my eyes water.\",\n  },\n  {\n    title: \"slowly\",\n    type: \"부사\",\n    example: \"I ate my pizza slowly.\",\n  },\n];\n\nconst vocaReducer = (state = vocaData, action) => {\n  if (action.type === \"addVoca\") {\n    const newState = [...state, action.payload];\n    return newState;\n  } else if (action.type === \"deleteVoca\") {\n    for (var i = 0; i < state.length; i++) {\n      if (state[i].title === action.payload.title) {\n        state.splice(i, 1);\n      }\n    }\n  }\n  return state;\n};\n\nexport default vocaReducer;\n","import { combineReducers } from \"redux\";\nimport vocaReducer from \"./vocaReducer\";\n\nconst rootreducer = combineReducers({\n  voca: vocaReducer,\n});\n\nexport default rootreducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootreducer from \"./reducers/rootReducer\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootreducer);\nconst theStore = createStore(persistedReducer);\nconst persistor = persistStore(theStore);\n\nReactDOM.render(\n  <Provider store={theStore}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}